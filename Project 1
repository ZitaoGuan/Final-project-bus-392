import csv

def open_files():
    file_name = input("Enter the file name: ")
    try:
        file_open = open(file_name, mode="r")
        print(file_open)
        file_open.close()
    except FileNotFoundError:
        print("File not found, please input the correct file")
        quit()
    except:
        print("File does not work or does not have permission")
        quit()


def read_file():
    pass


def highest_closing(list_val):
    high_value = 0
    date = 0
    for val in list_val:
        if val[4] > high_value:
            high_value = val[4]
            date = val[0]
    return (date, high_value)


def lowest_closing(list_val):
    low_value = 0
    date = 0
    for val in list_val:
        if val[1] < low_value:
            low_value = val[1]
            date = val[0]
    return (date, low_value)


def top_ten_highest_closing(list_val):
    top_ten = []
    sorted_list = sorted(list_val, reverse=True, key=lambda x:x[4])
    for val in range(10):
        top_ten.append((sorted_list[val][0], sorted_list[val][4]))
    return top_ten


def top_ten_lowest_open(list_val):
    low_ten = []
    sorted_list = sorted(list_val, key=lambda x:x[1])
    for val in range(10):
        low_ten.append((sorted_list[val][0],sorted_list[val][1]))
    return low_ten


def get_month(list_val):
    list_month = []
    for list_num in list_val:
        date_list = list_num[0].split('/')
        list_month.append(date_list[0])
    return list_month


def filter_month(list_mon):
    filter_list = []
    for months in list_mon:
        if months in filter_list:
            continue
        filter_list.append(months)
    return filter_list


def one_month_average(list_opening):
    return sum(list_opening)/len(list_opening)


def average_month_opening(list_val, months):
    list_average = []
    starting_point = 0
    for list_mon in months:
        count = 0
        list_one_opening = []
        for list_num in range(starting_point, len(list_val)):
            date_list = list_val[list_num][0].split('/')
            if list_num + 1 == len(list_val) and date_list[0] == list_mon:
                list_average.append((list_mon, list_val[list_num][1]))
                break
            elif date_list[0] != list_mon and count > 0:
                list_average.append(
                    (list_mon, one_month_average(list_one_opening))
                )
                starting_point = list_num
                break
            list_one_opening.append(list_val[list_num][1])
            count += 1
    return list_average
